#!/bin/bash
# Post installation script

set -o nounset # do not accept unset variables

TEXTDOMAIN=bl-welcome

BL_COMMON_LIBDIR='/usr/lib/bunsen/common'
BL_WELCOME_LIBDIR='/usr/lib/bunsen/welcome'

if ! . "$BL_COMMON_LIBDIR/bl-include.cfg" 2> /dev/null; then
    echo $"Error: Failed to source bl-include.cfg in $BL_COMMON_LIBDIR" >&2
    exit 1
fi

# default url for added Debian backports etc.
default_mirror='http://httpredir.debian.org/debian'

# matches most mirrors
# add (?=.*debian) at beginning to insist on 'debian' somewhere (needs PCRE)
mirror_regex='(http|ftp)://([[:alnum:]_-]+\.)+[[:alnum:]]+(/[[:alnum:]._-]+)*/?'

log_dir="$HOME/.cache/bunsen-welcome"
mkdir -p "$log_dir"
logfile="$log_dir"/bl-welcome.log

log() {
    echo "
${1-}
" >> "$logfile"
}

warnlog() {
    echo "######## WARNING ########
${1-}
------------------------------------------------" >> "$logfile"
}

STEPS_BASIC=('check-repos' 'apt-update' 'apt-upgrade' 'system-tweaks' 'install-images-extra' 'install-libreoffice' 'install-printer-packages' 'install-java-packages' 'add-debian-backports' 'install-flashplugin' 'add-multimedia-repo' 'devel')
STEPS_DEVEL=('devel-install-version-control-tools' 'devel-install-ssh-server' 'devel-install-lamp-stack' 'devel-install-packaging-tools')

# prints something like: -------[ page 1 of 10 ]-------
header() {
    local width=$(tput cols 2>/dev/tty)
    local headerLength=$((width - 8)) # 8 is for '[  ]' and 2 spaces margins
    local headerText=$(printf $"page %d of %d" "$STEP" "$STEPS")
    local dashesStart=$( printf "%$(( (headerLength - ${#headerText}) / 2 ))s" )
    local dashesEnd=$( printf "%$(( (headerLength - ${#headerText}) / 2 + (headerLength - ${#headerText}) % 2 ))s" )
    echo "  ${dashesStart// /-}[ ${headerText} ]${dashesEnd// /-}"$'\n'
}

# Usage: setupPage title text [prompt [prompt-extra-arg]]
# Omit prompt for noninteractive page.
setupPage() {
    sleep 1
    tput clear
    header
    say "${1^^}
${1//?/-}

$2
"
    [[ ${3-} ]] || { sleep 1;return 0;}
    prompt "  $3" "${4:-}"
    return $?
}

# Common function for most install scripts. USE THIS unless you really can't.
# Usage: installPage title text package...
# example: installPage 'LibreOffice suite' 'This will install libreoffice' 'libreoffice'
installPage() {
    local title=$"install"" $1"
    local text="$1 has already been installed."
    allInstalled "${@:3}" && {
        setupPage "$title" "$text"
        return 0
    }
    text="$2"$'\n\n'$"If you choose to do this, the following packages will be installed:""

    ${*:3}

"$"Note: additional packages listed as dependencies will also be installed."

    local prompt=$"Would you like to install"" ${1}?"

    if setupPage "$title" "$text" "$prompt" 'N'
    then
        if safeInstall "${@:3}"
        then
            return 0
        else
            say '...going to next page.' 1
        fi
    fi
    return 1
}

[[ -d /lib/live ]] && exit 0

if [[ ${1-} = '--firstrun' ]]; then # First run, from autostart
    [[ -e $HOME/.config/bunsen/bl-welcome ]] && exit 0
fi

terminalCheck -T 'WELCOME!'

exec > >( tee -a "$logfile" ) 2>&1

log "Starting bl-welcome for $USER at $(date)"

createFlag 'bl-welcome'

if [[ ! $(groups) =~ ( |^)sudo( |$) ]]; then
    echo $"Error: Must be a member of the sudo group to run this script" >&2
    exit 1
fi

# Run through steps
STEP=1
if [[ -e $HOME/.config/bunsen/bl-welcome-understood ]]; then
    (( STEPS = ${#STEPS_BASIC[@]} + ${#STEPS_DEVEL[@]} + 2 )) # 2 is intro and fini
    . "$BL_WELCOME_LIBDIR/intro"
else
    (( STEPS = ${#STEPS_BASIC[@]} + ${#STEPS_DEVEL[@]} + 3 )) # 3 is intro, warning and fini
    . "$BL_WELCOME_LIBDIR/intro"
    ((STEP++))
    . "$BL_WELCOME_LIBDIR/warning"
    createFlag 'bl-welcome-understood'
fi
sleep 2
tput clear
connectiontest

DEVEL=false

for curStep in "${STEPS_BASIC[@]}"; do
    ((STEP++))
    . "$BL_WELCOME_LIBDIR/$curStep"
done

if $DEVEL; then
    for curStep in "${STEPS_DEVEL[@]}"; do
        ((STEP++))
        . "$BL_WELCOME_LIBDIR/$curStep"
    done
fi
STEP=$STEPS
. "$BL_WELCOME_LIBDIR/fini"

exit 0
