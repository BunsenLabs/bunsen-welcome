install_dropbox_title=$"Dropbox"

# Directory to install the dropbox cli interface, dropbox.py.
# If dropbox.py is in user's $PATH they can use that command
# to control dropbox. Otherwise, use the absolute path /path/to/dropbox.py
USER_DBPY_DIR="$HOME/bin"
USER_DBPY="$USER_DBPY_DIR/dropbox.py"

REMOTE_DBPY='https://www.dropbox.com/download?dl=packages/dropbox.py'

USER_DB_DIR="$HOME/.dropbox-dist/"

offer_dropbox() {
    local intro="Dropbox is a popular file synchronizing service that some people find useful.
However it is proprietary software and there may also be security issues.

See:
Dropbox website https://www.dropbox.com
Dropbox terms: https://www.dropbox.com/terms

For installation, the dropbox python utility dropbox.py
will be downloaded from dropbox and run with the arguments \"start -i\".
See https://www.dropbox.com/help/desktop-web/linux-commands
for more information on dropbox.py.
"
    setupPage "$install_dropbox_title" "$intro" 'Would you like to install Dropbox?' 'N' || return 0
    say "Dropbox will be installed later."
    triggerRunPreFunction 'install_dropbox'
}

dropbox_is_installed() {
    [[ -x "$USER_DB_DIR/dropboxd" ]] || return 1
    return 0
}

get_dropbox.py() {
    [[ -e "$USER_DBPY" ]] && {
        if [[ -x "$USER_DBPY" ]]; then
            return 0
        else
            { echo "$0: $USER_DBPY exists but is not executable." >&2; return 1;}
        fi
    }
    mkdir -p "$USER_DBPY_DIR"
    say 'Fetching Dropbox frontend dropbox.py...'
    wget -O "$USER_DBPY" "$REMOTE_DBPY" || { echo "$0: dropbox.py download failed." >&2; return 1;}
    [[ -f "$USER_DBPY" ]] || { echo "$0: $USER_DBPY does not exist." >&2; return 1;}
    chmod 755 "$USER_DBPY" || { echo "$0: failed to set permissions on $USER_DBPY" >&2; return 1;}
    return 0
}

install_dropbox() {
    echo 'Now installing Dropbox...'

    get_dropbox.py || {
        echo "$0: failed to fetch dropbox.py" >&2
        say 'Failed to fetch dropbox.py'
        return 1
    }

    allInstalled python3-gpg || {
        say 'We need to install the package python3-gpg.
Do you want to proceed?'
        if prompt $"  Install python3-gpg?" Y
        then
            safeInstall python3-gpg
        else
            say "Dropbox install abandoned.
continuing..."
            return 0
        fi
    }
    sleep 1

    allInstalled thunar-dropbox-plugin || {
        say 'You might consider also installing the package thunar-dropbox-plugin,
which adds some dropbox-specific context-menu items for Thunar.
Would you like to proceed?'
        if prompt $"  Install thunar-dropbox-plugin?" Y
        then
            safeInstall --no-install-recommends thunar-dropbox-plugin
        else
            say "Thunar plugin install abandoned.
continuing..."
        fi
    }

    say '
Dropbox will be downloaded and installed.
If you want to connect to an existing account, please have your login details ready.
(A separate browser window will open for login, but you can also sign in to Dropbox later via the systemtray icon.)' 3
    "$USER_DBPY" start -i > /dev/null 2>&1

    dropbox_is_installed || {
        say 'Dropbox installation failed.'
        return 1
    }

    say '
Dropbox has been installed.' 2
    say "
Dropbox CLI frontend dropbox.py has been installed in $USER_DBPY_DIR.
Run '$USER_DBPY help' to view options.
(If $USER_DBPY_DIR is in your PATH, then the path $USER_DBPY_DIR can be omitted.)

There is also a Dropbox pipemenu in the default BunsenLabs menu,
which you might want to consider enabling.
See ~/.config/jgmenu/prepend.csv
" 4

    say '
Dropbox can be started automatically when you start your session. Would you like to autostart Dropbox when you login?'
    if prompt '  autostart?' Y
    then
        add_autostart
    fi
}

add_autostart() {
    local time PS3
    say 'It is a good idea to add a delay before autostarting Dropbox so that your system can establish a working network connection.'
    if grep -q "$USER_DBPY start" "$HOME/.config/bunsen/autostart"
    then
        say "Autostart entry already exists."
    else
        PS3='Please enter the number of your choice > '
        select time in 0 10s 20s 30s 40s 50s 60s ; do break; done
        if [[ -n $time ]]
        then
            say "Adding delay of $time in $HOME/.config/openbox/autostart" 1
            cat <<DRBX >> "$HOME/.config/bunsen/autostart"

# Autostart the Dropbox daemon
(sleep ${time}; $USER_DBPY start) &

DRBX
        else
            say 'Autostart entry not added'
        fi
    fi
    say "
You can change the autostart setting by editing $HOME/.config/openbox/autostart at the line with \"$USER_DBPY start\"" pause
}

if dropbox_is_installed
then
    setupPage "$install_dropbox_title" "Dropbox is already installed."
else
    offer_dropbox || {
        say 'Something went wrong.
Going to next page...'
    }
fi
