#!/bin/bash
# Post installation script
unset LANGUAGE
export LANG=C.UTF-8

TEXTDOMAIN=bl-welcome

BL_COMMON_LIBDIR='/usr/lib/bunsen/bunsen-common'
BL_WELCOME_LIBDIR='/usr/lib/bunsen/bunsen-welcome'

if ! . "$BL_COMMON_LIBDIR/bl-include.cfg" 2> /dev/null; then
    echo $"Error: Failed to locate bl-include.cfg in $BL_COMMON_LIBDIR" >&2
    exit 1
fi

STEPS_BASIC=('apt-update' 'apt-upgrade' 'install-pae-kernel' 'add-multimedia-repo' 'install-printer-packages' 'install-java-packages' 'install-libreoffice' 'devel')
STEPS_DEVEL=('devel-install-version-control-tools' 'devel-install-ssh-server' 'devel-install-lamp-stack' 'devel-install-packaging-tools')



runInTerminal() {
    x-terminal-emulator -T 'WELCOME!' -e "$0" "$@"
    exit 0
}

# prints something like -------[ step 1 of 10 ]-------
header() {
    width=$(tput cols)
    local headerLength=$((width - 8)) # 8 is for '[  ]' and 2 spaces margins
    local headerText=$(printf $"screen %d of %d" "$STEP" "$STEPS")
    dashesStart=$( printf "%$(( (headerLength - ${#headerText}) / 2 ))s" )
    dashesEnd=$( printf "%$(( (headerLength - ${#headerText}) / 2 + (headerLength - ${#headerText}) % 2 ))s" )
    echo "  ${dashesStart// /-}[ ${headerText} ]${dashesEnd// /-}"$'\n'
}

# Usage: setupPage title text [prompt [prompt-extra-arg]]
# Omit prompt for noninteractive page.
setupPage() {
    sleep 2
    tput clear
    header
    say "$1" # title
    titleDelimiter=$( printf "%${#1}s" )
    say "${titleDelimiter// /-}"$'\n'
    say "$2"$'\n' # description
    [[ $3 ]] || { sleep 2;return 0;}
    prompt "  $3" "${4:-}"
    return $?
}

# Common function for most install scripts. USE THIS unless you really can't.
# Usage: installPage title text package...
# example: installPage 'LibreOffice suite' 'This will install libreoffice' 'libreoffice'
installPage() {
    local title=$"INSTALL"" ${1^^}"
    local text="$2 "$"If you choose to do this, the following packages will be installed:""

    ${*:3}

"$"Note: additional packages listed as dependencies will also be installed."

    local prompt=$"Would you like to install"" $1?"

    if setupPage "$title" "$text" "$prompt" 'N'
    then
        ignore_string1='Extracting templates from packages: 100%' # apt sends this to stderr!
        ignore_string2='Retrieving bug reports... Done' # apt-listbugs sends this to stderr!
        ignore_string3='Parsing Found/Fixed information... Done' # apt-listbugs sends this to stderr!
        if local apt_error=$(sudo apt-get install "${@:3}" 2>&1 >/dev/tty) && ! grep -iqEv "(${ignore_string1}|${ignore_string2}|${ignore_string3}|^$)" <<<"$apt_error"
        then
            return 0
        else
            if errorExit "There were problems installing ${@:3}" "$apt_error";then
                say '...going to next page.'
            fi
        fi
    fi
    return 1
}

[[ -d /var/lib/live ]] && exit 0

if [[ $1 = '--firstrun' ]]; then # First run, from autostart
    [[ -e $HOME/.config/bunsen/bl-welcome ]] && exit 0
fi

if ! [[ -t 0 && -t 1 && -t 2 ]]; then # not attached to terminal
    if [[ -n $DISPLAY ]]; then
        runInTerminal "$@"
    else
        echo "$0: no terminal" >&2
        exit 1
    fi
fi

createFlag 'bl-welcome'

if [[ ! $(groups) =~ ( |^)sudo( |$) ]]; then
    echo $"Error: Must be a member of the sudo group to run this script" >&2
    exit 1
fi

# Run through steps
STEP=1
if [[ -e $HOME/.config/bunsen/bl-welcome-understood ]]; then
    (( STEPS = ${#STEPS_BASIC[@]} + ${#STEPS_DEVEL[@]} + 2 )) # 2 is intro and fini
    . "$BL_WELCOME_LIBDIR/intro"
else
    (( STEPS = ${#STEPS_BASIC[@]} + ${#STEPS_DEVEL[@]} + 3 )) # 3 is intro, warning and fini
    . "$BL_WELCOME_LIBDIR/intro"
    ((STEP++))
    . "$BL_WELCOME_LIBDIR/warning"
    createFlag 'bl-welcome-understood'
fi
tput clear
connectiontest
#tput clear

DEVEL=false

for curStep in "${STEPS_BASIC[@]}"; do
    ((STEP++))
    . "$BL_WELCOME_LIBDIR/$curStep"
done

if $DEVEL; then
    for curStep in "${STEPS_DEVEL[@]}"; do
        ((STEP++))
        . "$BL_WELCOME_LIBDIR/$curStep"
    done
fi
STEP=$STEPS
. "$BL_WELCOME_LIBDIR/fini"

exit 0
