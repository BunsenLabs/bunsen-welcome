# NOTE this page should be sourced AFTER add-debian-backports
# as it uses the addDebianBackports() and haveDebianBackports() functions.

install_flash_title=$"Flash Browser Plugin"
chromium_flash_pkgs=('bunsen-pepperflash' 'chromium')
firefox_flash_pkgs=('bunsen-pepperflash' 'browser-plugin-freshplayer-pepperflash')
old_flash_pkgs=('flashplugin-nonfree' 'pepperflashplugin-nonfree')

installFlashplugin() {
    local intro1=$"Some web pages use the proprietary Adobe Flash format to play audio or video.\
 This page will download and install a Flash Player from Adobe.\
 It is unfree software which sometimes causes problems, and it is recommended not to install it if you do not need to.

However, while an increasing number of websites, for example Youtube, support alternative technologies, sometimes Flash is the only option.
"
    local intro2=$"The flash plugin will be downloaded and configured by bunsen-pepperflash,\
 which will download the PPAPI (\"pepperflash\") plugin directly from Adobe, and check for updates every day.\
 Configuration files will be installed for Chromium and Firefox.
"

    local chromium_intro=$"The safest option is to install Chromium and use it for Flash content only, continuing to use Firefox for everything else.\
 Chromium runs flash in a \"sandbox\" which keeps it somewhat isolated from the rest of the system.
"

    local firefox_intro=$"You can also use Firefox for Flash content along with your other web browsing.\
 Firefox is not able to \"sandbox\" flash content, so is less secure, but this option might be more convenient for some people.
The extra package browser-plugin-freshplayer-pepperflash will be installed.
"

    local freshplayer_note_backports=$"NOTE: in order to install browser-plugin-freshplayer-pepperflash the Debian Backports repository will have to be enabled."

    local pkgs_to_install=()
    local pkgs_to_remove=()

    setupPage "$install_flash_title" "$intro1" $"Would you like to install a Flash Browser Plugin?" 'N' || return 0

    local need_backports=false
    haveDebianBackports || {
        firefox_intro+=$'\n'"$freshplayer_note_backports"
        need_backports=true
    }

    say "$intro2
There are two options:

1) $chromium_intro
2) $firefox_intro

Would you like to use Chromium for Flash (safer)
or use the Pepperflash plugin with Firefox?

Press 'c' for Chromium or 'f' for Firefox,
any other key to cancel.
"
    local REPLY
    read -r -p ' "C" for Chromium, "F" for Firefox: '
    case ${REPLY^} in
    C)
        choice=chromium;;
    F)
        choice=firefox;;
    *)
        say $"Cancelled, going on to next page..." 2
        return 0;;
    esac

    echo $'\n'

    for pkg in "${old_flash_pkgs[@]}"
    do
        allInstalled "$pkg" && pkgs_to_remove+=("$pkg")
    done
    if [[ ${#pkgs_to_remove[@]} -gt 0 ]]
    then
        say $"These packages are no longer needed, and will be removed:
${pkgs_to_remove[*]}"
        if prompt $"Continue?" Y
        then
            say "${pkgs_to_remove[*]} will be uninstalled."
        else
            say "...going to next page."
            return 0
        fi
    fi

    case "$choice" in
    chromium)
        for pkg in "${chromium_flash_pkgs[@]}"
        do
            allInstalled "$pkg" || pkgs_to_install+=("$pkg")
        done
        ;;
    firefox)
        if $need_backports
        then
            if addDebianBackports
            then
                say $'Sucessfully added Debian Backports.\n'
            else
                say "...going to next page." 2
                return 1
            fi
        fi
        for pkg in "${firefox_flash_pkgs[@]}"
        do
            allInstalled "$pkg" || pkgs_to_install+=("$pkg")
        done
        ;;
    esac

    [[ ${#pkgs_to_install[@]} -gt 0 ]] || {
        say "No packages selected for install." 2
        return 1
    }

    [[ ${#pkgs_to_remove[@]} -gt 0 ]] && if safeRemove "${pkgs_to_remove[@]}"
    then
        say "Sucessfully removed: ${pkgs_to_remove[*]}" 2
    else
        say '...going to next page.' 2
        return 1
    fi

    say $"These packages will be installed:
${pkgs_to_install[*]}"
    if prompt $"Continue?" Y
    then
        if safeInstall "${pkgs_to_install[@]}" "${old_flash_pkgs[@]/%/-}"
        then
            say "Flash setup complete." 4
        else
            say '...going to next page.' 2
            return 1
        fi
    else
        say '...going to next page.'
        return 0
    fi
}
if allInstalled "${firefox_flash_pkgs[@]}"
then
    setupPage "$install_flash_title" $"You already have a Flash Plugin installed and configured for Firefox."
elif allInstalled "${chromium_flash_pkgs[@]}"
then
    setupPage "$install_flash_title" $"You already have a Flash Plugin installed and configured for Chromium."
else
    installFlashplugin
fi
